#!/usr/bin/perl -w -- 
# generated by wxGlade 0.3.5.1 on Tue Mar  8 01:40:49 2005
# To get wxPerl visit http://wxPerl.sourceforge.net/

use Wx 0.15 qw[:allclasses];
use strict;

package Viewer;

use Wx qw[:everything];
use Wx qw[wxTheApp];
use Wx::Event qw(EVT_BUTTON EVT_CLOSE);
use base qw(Wx::Frame Pobject);
use strict;

sub new {
	my( $self, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
	$parent = undef              unless defined $parent;
	$id     = -1                 unless defined $id;
	$title  = ""                 unless defined $title;
	$pos    = wxDefaultPosition  unless defined $pos;
	$size   = wxDefaultSize      unless defined $size;
	$name   = ""                 unless defined $name;

# begin wxGlade: Viewer::new

	$style = wxDEFAULT_FRAME_STYLE 
		unless defined $style;

	$self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
	$self->{panel_1} = Wx::Panel->new($self, -1, wxDefaultPosition, wxDefaultSize, );
	$self->{sizer_2_staticbox} = Wx::StaticBox->new($self->{panel_1}, -1, "Neat Stuff" );
	$self->{results} = Wx::TextCtrl->new($self->{panel_1}, -1, "", wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE);
	$self->{label_1} = Wx::StaticText->new($self->{panel_1}, -1, "URL", wxDefaultPosition, wxDefaultSize, );
	$self->{parameter} = Wx::TextCtrl->new($self->{panel_1}, -1, "http://www.google.com/", wxDefaultPosition, wxDefaultSize, );
	$self->{request} = Wx::Button->new($self->{panel_1}, -1, "request data with key");
	$self->{subscription_key} = Wx::TextCtrl->new($self->{panel_1}, -1, "subscription_key", wxDefaultPosition, wxDefaultSize, );
	$self->{spawn} = Wx::Button->new($self->{panel_1}, -1, "spawn frame");

	$self->__set_properties();
	$self->__do_layout();

# end wxGlade

    $self->{parameter}->SetValue("http://www.google.com");

    my $response_sub = sub {
       my $data = shift;
       $self->{results}->SetValue($data);
    };

    my $request = sub {
       my $parameter=$self->{parameter}->GetValue();
       my $key=$self->{subscription_key}->GetValue();
       if ($self->{current_key}) {
          $self->unsubscribe(KEY=>$self->{current_key});
       }
       $self->{current_key}=$key;
       $self->subscribe(KEY=>$key,
                        ACTION=>$response_sub);
       $self->request_data(PARAMETER=>$parameter,
                           KEY=>$key,
                        );
    };

    my $spawn = sub {
       my $viewerframe=Viewer->new();
       Wx::wxTheApp->SetTopWindow($viewerframe);
       $viewerframe->Show(1);
    };


    EVT_BUTTON($self, $self->{spawn}, $spawn);
    EVT_BUTTON($self, $self->{request}, $request);
    $self->register_object();
    EVT_CLOSE($self, sub {$self->unregister_object();
                          $self->Destroy();});
	return $self;
}


sub __set_properties {
	my $self = shift;

# begin wxGlade: Viewer::__set_properties

	$self->SetTitle("frame_1");
	$self->{results}->SetSize(473, 86);

# end wxGlade
}

sub __do_layout {
	my $self = shift;

# begin wxGlade: Viewer::__do_layout

	$self->{sizer_1} = Wx::BoxSizer->new(wxVERTICAL);
	$self->{sizer_2}= Wx::StaticBoxSizer->new($self->{sizer_2_staticbox}, wxVERTICAL);
	$self->{sizer_2}->Add($self->{results}, 0, wxEXPAND|wxFIXED_MINSIZE, 0);
	$self->{sizer_2}->Add($self->{label_1}, 0, wxFIXED_MINSIZE, 0);
	$self->{sizer_2}->Add($self->{parameter}, 0, wxEXPAND|wxFIXED_MINSIZE, 0);
	$self->{sizer_2}->Add($self->{request}, 0, wxEXPAND|wxALIGN_CENTER_HORIZONTAL|wxFIXED_MINSIZE, 0);
	$self->{sizer_2}->Add($self->{subscription_key}, 0, wxEXPAND|wxFIXED_MINSIZE, 0);
	$self->{sizer_2}->Add($self->{spawn}, 0, wxALIGN_CENTER_HORIZONTAL|wxFIXED_MINSIZE, 0);
	$self->{panel_1}->SetAutoLayout(1);
	$self->{panel_1}->SetSizer($self->{sizer_2});
	$self->{sizer_2}->Fit($self->{panel_1});
	$self->{sizer_2}->SetSizeHints($self->{panel_1});
	$self->{sizer_1}->Add($self->{panel_1}, 1, wxEXPAND, 0);
	$self->SetAutoLayout(1);
	$self->SetSizer($self->{sizer_1});
	$self->{sizer_1}->Fit($self);
	$self->{sizer_1}->SetSizeHints($self);
	$self->Layout();

# end wxGlade
}

# end of class Viewer

1;

